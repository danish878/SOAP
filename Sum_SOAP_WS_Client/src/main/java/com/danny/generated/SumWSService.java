package com.danny.generated;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.2
 * 2019-05-21T19:00:31.510+05:00
 * Generated source version: 3.3.2
 */
@WebServiceClient(name = "SumWSService",
        wsdlLocation = "file:/C:/Users/Danish/Desktop/Downloads/Eclipse_EE_Workspace/Sum_SOAP_WS_Client/src/main/resources/sumService.wsdl",
        targetNamespace = "http://sumws.danny.com/")
public class SumWSService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://sumws.danny.com/", "SumWSService");
    public final static QName SumWSPort = new QName("http://sumws.danny.com/", "SumWSPort");

    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/Danish/Desktop/Downloads/Eclipse_EE_Workspace/Sum_SOAP_WS_Client/src/main/resources/sumService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SumWSService.class.getName())
                    .log(java.util.logging.Level.INFO,
                            "Can not initialize the default wsdl from {0}", "file:/C:/Users/Danish/Desktop/Downloads/Eclipse_EE_Workspace/Sum_SOAP_WS_Client/src/main/resources/sumService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SumWSService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SumWSService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SumWSService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public SumWSService(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SumWSService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SumWSService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }


    /**
     * @return returns SumWS
     */
    @WebEndpoint(name = "SumWSPort")
    public SumWS getSumWSPort() {
        return super.getPort(SumWSPort, SumWS.class);
    }

    /**
     * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns SumWS
     */
    @WebEndpoint(name = "SumWSPort")
    public SumWS getSumWSPort(WebServiceFeature... features) {
        return super.getPort(SumWSPort, SumWS.class, features);
    }

}
